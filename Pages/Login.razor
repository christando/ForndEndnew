@page "/"
@inject NavigationManager Navigation
@using System.ComponentModel.DataAnnotations
@using System.Net.Http
@inject HttpClient Http
@using System.Net.Http.Json

<h1>Login</h1>
<div class="card-body">
    <div class="form-container">
        <div class="card-header">
            <EditForm Model="@login" OnValidSubmit="@HandleValidSubmit">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="form-group">
                    <label for="username">Username</label>
                    <InputText id="username" name="username" class="form-control" @bind-Value="login.Username" />
                    <ValidationMessage For="() => login.Username" />
                </div>

                <div class="form-group">
                    <label for="password">Password</label>
                    <InputText id="password" name="password" class="form-control" type="password"
                        @bind-Value="login.Password" />
                    <ValidationMessage For="() => login.Password" />
                </div>
                <br>
                <button type="submit" class="btn btn-primary">Login</button>
                <div class="divider">OR</div>
                <button type="button" class="btn btn-secondary" @onclick="register">Register</button>
            </EditForm>
        </div>
    </div>
</div>

@code {
    private LoginModel login = new LoginModel();
    private void HandleValidSubmit()
    {
        var UserLogin = new UserLogin
            {
                Username = login.Username,
                Password = login.Password,
            };
    }

    private void register()
    {
        Navigation.NavigateTo("/register");
    }
    public class LoginModel
    {
        [Required(ErrorMessage = "Username is required.")]
        public string? Username { get; set; }

        [Required(ErrorMessage = "Password is required.")]
        [DataType(DataType.Password)]
        public string? Password { get; set; }
    }
    @* protected override async Task OnInitializedAsync() =>
    login = await Http.GetFromJsonAsync<LoginModel[]>("/api/loginItems"); *@
}
